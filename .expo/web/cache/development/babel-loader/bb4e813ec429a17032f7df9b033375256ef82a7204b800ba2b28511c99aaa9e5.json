{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _getCurrentScriptSource = _interopRequireDefault(require(\"./getCurrentScriptSource.js\"));\nfunction parseURL(resourceQuery) {\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    var scriptSource = (0, _getCurrentScriptSource.default)();\n    var scriptSourceURL;\n    try {\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {}\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nvar _default = parseURL;\nexports.default = _default;","map":{"version":3,"names":["_getCurrentScriptSource","_interopRequireDefault","require","parseURL","resourceQuery","options","searchParams","slice","split","i","length","pair","decodeURIComponent","scriptSource","getCurrentScriptSource","scriptSourceURL","URL","self","location","href","error","fromCurrentScript","_default","exports","default"],"sources":["C:/Users/Yousuf/AppData/Roaming/npm/node_modules/expo-cli/node_modules/webpack-dev-server/client/utils/parseURL.js"],"sourcesContent":["import getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    var scriptSourceURL;\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {\n      // URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nexport default parseURL;"],"mappings":";;;;;AAAA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAMA,SAASC,QAAQA,CAACC,aAAa,EAAE;EAE/B,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,IAAI,OAAOD,aAAa,KAAK,QAAQ,IAAIA,aAAa,KAAK,EAAE,EAAE;IAC7D,IAAIE,YAAY,GAAGF,aAAa,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,IAAIE,IAAI,GAAGL,YAAY,CAACG,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;MACrCH,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD;EACF,CAAC,MAAM;IAEL,IAAIE,YAAY,GAAG,IAAAC,+BAAsB,GAAE;IAC3C,IAAIC,eAAe;IACnB,IAAI;MAIFA,eAAe,GAAG,IAAIC,GAAG,CAACH,YAAY,EAAEI,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;IAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE,CAGhB;IACA,IAAIL,eAAe,EAAE;MACnBV,OAAO,GAAGU,eAAe;MACzBV,OAAO,CAACgB,iBAAiB,GAAG,IAAI;IAClC;EACF;EACA,OAAOhB,OAAO;AAChB;AAAC,IAAAiB,QAAA,GACcnB,QAAQ;AAAAoB,OAAA,CAAAC,OAAA,GAAAF,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}